# -*- coding: utf-8 -*-
"""Finding outliers .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18UGLlQFpc67v6pIzpq9nIXfZ2vLJZpSk
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

dataset=[-4,-6-7,20,19,23,23,23,23,44,12,13,14,14,14,14,26,25,90,29,999,45,3,12,25,14,13,15,16.171,12,13,14,15,11,10,10,19,10]

plt.hist(dataset)

# zscore

outliers=[]

def detect_outliers(data):
   threshold=3 # 3rd sdt deviation
   mean=np.mean(data)
   std=np.std(data)

   for i in data:
    z_score=(i-mean/std)
    if np.abs(z_score)> threshold:
      outliers.append(i)

    return outliers

detect_outliers(dataset)

#IQR

# SORTING DATA

dataset=sorted(dataset)

dataset

# q1 and q3

q1,q3=np.percentile(dataset,[25,75])
print(q1,q3)

iqr=q3-q1

iqr

# lower fence and upper fence

lower_fence=q1-(1.5*iqr)
upper_fence=q1+(1.5*iqr)

print(lower_fence,upper_fence)

import seaborn as sns

sns.boxplot(dataset)

